{
  "contractName": "User",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "usermap",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "biodata",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "biodata",
          "type": "string"
        }
      ],
      "name": "setProfile",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "Useraddress",
          "type": "address"
        }
      ],
      "name": "getProfile",
      "outputs": [
        {
          "components": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "biodata",
              "type": "string"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"Useraddress\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"biodata\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"biodata\",\"type\":\"string\"}],\"name\":\"setProfile\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"usermap\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"biodata\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/User.sol\":\"User\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/User.sol\":{\"keccak256\":\"0x75da84906c9d321ae9f702be07893d04dcc92634d51a7c16103eb55a5b49ebef\",\"urls\":[\"bzzr://9f87ecdd7fe2a1e08b557065aaeac13829220e1a38268d4e63a660fe1870036e\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061083e806100206000396000f3fe608060405260043610610051576000357c0100000000000000000000000000000000000000000000000000000000900480630f53a47014610056578063719e37ae14610093578063a0fb19be146100bc575b600080fd5b34801561006257600080fd5b5061007d600480360361007891908101906105b3565b6100fa565b60405161008a91906106f9565b60405180910390f35b34801561009f57600080fd5b506100ba60048036036100b591908101906105dc565b610296565b005b3480156100c857600080fd5b506100e360048036036100de91908101906105b3565b610336565b6040516100f19291906106c2565b60405180910390f35b61010261048a565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604080519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b5050505050815250509050919050565b61029e61048a565b6040805190810160405280848152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906103109291906104a4565b50602082015181600101908051906020019061032d9291906104a4565b50905050505050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103e25780601f106103b7576101008083540402835291602001916103e2565b820191906000526020600020905b8154815290600101906020018083116103c557829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104805780601f1061045557610100808354040283529160200191610480565b820191906000526020600020905b81548152906001019060200180831161046357829003601f168201915b5050505050905082565b604080519081016040528060608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104e557805160ff1916838001178555610513565b82800160010185558215610513579182015b828111156105125782518255916020019190600101906104f7565b5b5090506105209190610524565b5090565b61054691905b8082111561054257600081600090555060010161052a565b5090565b90565b6000610555823561079f565b905092915050565b600082601f830112151561057057600080fd5b813561058361057e82610748565b61071b565b9150808252602083016020830185838301111561059f57600080fd5b6105aa8382846107b1565b50505092915050565b6000602082840312156105c557600080fd5b60006105d384828501610549565b91505092915050565b600080604083850312156105ef57600080fd5b600083013567ffffffffffffffff81111561060957600080fd5b6106158582860161055d565b925050602083013567ffffffffffffffff81111561063257600080fd5b61063e8582860161055d565b9150509250929050565b600061065382610774565b8084526106678160208601602086016107c0565b610670816107f3565b602085010191505092915050565b6000604083016000830151848203600086015261069b8282610648565b915050602083015184820360208601526106b58282610648565b9150508091505092915050565b600060408201905081810360008301526106dc8185610648565b905081810360208301526106f08184610648565b90509392505050565b60006020820190508181036000830152610713818461067e565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561073e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561075f57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107aa8261077f565b9050919050565b82818337600083830152505050565b60005b838110156107de5780820151818401526020810190506107c3565b838111156107ed576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a7230582060e4be6a5cbeb2f50099a290ac8112d96ec424bb20588544289f4715bc1ff7576c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405260043610610051576000357c0100000000000000000000000000000000000000000000000000000000900480630f53a47014610056578063719e37ae14610093578063a0fb19be146100bc575b600080fd5b34801561006257600080fd5b5061007d600480360361007891908101906105b3565b6100fa565b60405161008a91906106f9565b60405180910390f35b34801561009f57600080fd5b506100ba60048036036100b591908101906105dc565b610296565b005b3480156100c857600080fd5b506100e360048036036100de91908101906105b3565b610336565b6040516100f19291906106c2565b60405180910390f35b61010261048a565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604080519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101e45780601f106101b9576101008083540402835291602001916101e4565b820191906000526020600020905b8154815290600101906020018083116101c757829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102865780601f1061025b57610100808354040283529160200191610286565b820191906000526020600020905b81548152906001019060200180831161026957829003601f168201915b5050505050815250509050919050565b61029e61048a565b6040805190810160405280848152602001838152509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906103109291906104a4565b50602082015181600101908051906020019061032d9291906104a4565b50905050505050565b6000602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103e25780601f106103b7576101008083540402835291602001916103e2565b820191906000526020600020905b8154815290600101906020018083116103c557829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104805780601f1061045557610100808354040283529160200191610480565b820191906000526020600020905b81548152906001019060200180831161046357829003601f168201915b5050505050905082565b604080519081016040528060608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106104e557805160ff1916838001178555610513565b82800160010185558215610513579182015b828111156105125782518255916020019190600101906104f7565b5b5090506105209190610524565b5090565b61054691905b8082111561054257600081600090555060010161052a565b5090565b90565b6000610555823561079f565b905092915050565b600082601f830112151561057057600080fd5b813561058361057e82610748565b61071b565b9150808252602083016020830185838301111561059f57600080fd5b6105aa8382846107b1565b50505092915050565b6000602082840312156105c557600080fd5b60006105d384828501610549565b91505092915050565b600080604083850312156105ef57600080fd5b600083013567ffffffffffffffff81111561060957600080fd5b6106158582860161055d565b925050602083013567ffffffffffffffff81111561063257600080fd5b61063e8582860161055d565b9150509250929050565b600061065382610774565b8084526106678160208601602086016107c0565b610670816107f3565b602085010191505092915050565b6000604083016000830151848203600086015261069b8282610648565b915050602083015184820360208601526106b58282610648565b9150508091505092915050565b600060408201905081810360008301526106dc8185610648565b905081810360208301526106f08184610648565b90509392505050565b60006020820190508181036000830152610713818461067e565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561073e57600080fd5b8060405250919050565b600067ffffffffffffffff82111561075f57600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107aa8261077f565b9050919050565b82818337600083830152505050565b60005b838110156107de5780820151818401526020810190506107c3565b838111156107ed576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a7230582060e4be6a5cbeb2f50099a290ac8112d96ec424bb20588544289f4715bc1ff7576c6578706572696d656e74616cf50037",
  "sourceMap": "89:471:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;89:471:1;;;;;;;",
  "deployedSourceMap": "89:471:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;441:117:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;221:215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;221:215:1;;;;;;;;;;;;;;;;:::i;:::-;;176:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;176:38:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;441:117;502:11;;:::i;:::-;531:7;:20;539:11;531:20;;;;;;;;;;;;;;;524:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;441:117;;;:::o;221:215::-;300:19;;:::i;:::-;322:68;;;;;;;;;346:4;322:68;;;;372:7;322:68;;;300:90;;422:7;400;:19;408:10;400:19;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;221:215;;;:::o;176:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;89:471::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;131:442;;233:3;226:4;218:6;214:17;210:27;203:35;200:2;;;251:1;248;241:12;200:2;288:6;275:20;310:65;325:49;367:6;325:49;;;310:65;;;301:74;;395:6;388:5;381:21;431:4;423:6;419:17;464:4;457:5;453:16;499:3;490:6;485:3;481:16;478:25;475:2;;;516:1;513;506:12;475:2;526:41;560:6;555:3;550;526:41;;;193:380;;;;;;;;581:241;;685:2;673:9;664:7;660:23;656:32;653:2;;;701:1;698;691:12;653:2;736:1;753:53;798:7;789:6;778:9;774:22;753:53;;;743:63;;715:97;647:175;;;;;829:578;;;970:2;958:9;949:7;945:23;941:32;938:2;;;986:1;983;976:12;938:2;1049:1;1038:9;1034:17;1021:31;1072:18;1064:6;1061:30;1058:2;;;1104:1;1101;1094:12;1058:2;1124:63;1179:7;1170:6;1159:9;1155:22;1124:63;;;1114:73;;1000:193;1252:2;1241:9;1237:18;1224:32;1276:18;1268:6;1265:30;1262:2;;;1308:1;1305;1298:12;1262:2;1328:63;1383:7;1374:6;1363:9;1359:22;1328:63;;;1318:73;;1203:194;932:475;;;;;;1414:292;;1512:35;1541:5;1512:35;;;1564:6;1559:3;1552:19;1576:63;1632:6;1625:4;1620:3;1616:14;1609:4;1602:5;1598:16;1576:63;;;1671:29;1693:6;1671:29;;;1664:4;1659:3;1655:14;1651:50;1644:57;;1492:214;;;;;;1756:624;;1889:4;1884:3;1880:14;1975:3;1968:5;1964:15;1958:22;2024:3;2018:4;2014:14;2008:3;2003;1999:13;1992:37;2044:68;2107:4;2094:11;2044:68;;;2036:76;;1909:215;2203:4;2196:5;2192:16;2186:23;2254:3;2248:4;2244:14;2237:4;2232:3;2228:14;2221:38;2274:68;2337:4;2324:11;2274:68;;;2266:76;;2134:220;2371:4;2364:11;;1862:518;;;;;;2387:454;;2555:2;2544:9;2540:18;2532:26;;2605:9;2599:4;2595:20;2591:1;2580:9;2576:17;2569:47;2630:64;2689:4;2680:6;2630:64;;;2622:72;;2742:9;2736:4;2732:20;2727:2;2716:9;2712:18;2705:48;2767:64;2826:4;2817:6;2767:64;;;2759:72;;2526:315;;;;;;2848:325;;2998:2;2987:9;2983:18;2975:26;;3048:9;3042:4;3038:20;3034:1;3023:9;3019:17;3012:47;3073:90;3158:4;3149:6;3073:90;;;3065:98;;2969:204;;;;;3180:256;;3242:2;3236:9;3226:19;;3280:4;3272:6;3268:17;3379:6;3367:10;3364:22;3343:18;3331:10;3328:34;3325:62;3322:2;;;3400:1;3397;3390:12;3322:2;3420:10;3416:2;3409:22;3220:216;;;;;3443:259;;3587:18;3579:6;3576:30;3573:2;;;3619:1;3616;3609:12;3573:2;3663:4;3659:9;3652:4;3644:6;3640:17;3636:33;3628:41;;3692:4;3686;3682:15;3674:23;;3510:192;;;;3709:88;;3786:5;3780:12;3770:22;;3764:33;;;;3804:128;;3884:42;3877:5;3873:54;3862:65;;3856:76;;;;3939:105;;4008:31;4033:5;4008:31;;;3997:42;;3991:53;;;;4052:145;4133:6;4128:3;4123;4110:30;4189:1;4180:6;4175:3;4171:16;4164:27;4103:94;;;;4206:268;4271:1;4278:101;4292:6;4289:1;4286:13;4278:101;;;4368:1;4363:3;4359:11;4353:18;4349:1;4344:3;4340:11;4333:39;4314:2;4311:1;4307:10;4302:15;;4278:101;;;4394:6;4391:1;4388:13;4385:2;;;4459:1;4450:6;4445:3;4441:16;4434:27;4385:2;4255:219;;;;;4482:97;;4570:2;4566:7;4561:2;4554:5;4550:14;4546:28;4536:38;;4530:49;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.5.1;\npragma experimental ABIEncoderV2;\ncontract User{\n    struct user{\n        string name;\n        string biodata;\n    }\n    mapping (address=>user) public usermap;\n\n    function setProfile(string memory name, string memory biodata) public{\n        user memory newuser = user({\n            name:name,\n            biodata:biodata\n        });\n        usermap[msg.sender] = newuser;\n    }\n    function getProfile(address Useraddress) public view returns(user memory){\n        return usermap[Useraddress];\n    }\n}\n",
  "sourcePath": "/Users/admin/Twitter-Dapp/contracts/User.sol",
  "ast": {
    "absolutePath": "project:/contracts/User.sol",
    "exportedSymbols": {
      "User": [
        333
      ]
    },
    "id": 334,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 288,
        "literals": [
          "solidity",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:1"
      },
      {
        "id": 289,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "55:33:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 333,
        "linearizedBaseContracts": [
          333
        ],
        "name": "User",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "User.user",
            "id": 294,
            "members": [
              {
                "constant": false,
                "id": 291,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 294,
                "src": "129:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 290,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "129:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 293,
                "name": "biodata",
                "nodeType": "VariableDeclaration",
                "scope": 294,
                "src": "150:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 292,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "150:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "user",
            "nodeType": "StructDefinition",
            "scope": 333,
            "src": "108:63:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 298,
            "name": "usermap",
            "nodeType": "VariableDeclaration",
            "scope": 333,
            "src": "176:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$294_storage_$",
              "typeString": "mapping(address => struct User.user)"
            },
            "typeName": {
              "id": 297,
              "keyType": {
                "id": 295,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "185:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "176:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$294_storage_$",
                "typeString": "mapping(address => struct User.user)"
              },
              "valueType": {
                "contractScope": null,
                "id": 296,
                "name": "user",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 294,
                "src": "194:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_user_$294_storage_ptr",
                  "typeString": "struct User.user"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 319,
              "nodeType": "Block",
              "src": "290:146:1",
              "statements": [
                {
                  "assignments": [
                    306
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 306,
                      "name": "newuser",
                      "nodeType": "VariableDeclaration",
                      "scope": 319,
                      "src": "300:19:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_user_$294_memory_ptr",
                        "typeString": "struct User.user"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 305,
                        "name": "user",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 294,
                        "src": "300:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_user_$294_storage_ptr",
                          "typeString": "struct User.user"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 311,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 308,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "346:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 309,
                        "name": "biodata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "372:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 307,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "322:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_user_$294_storage_ptr_$",
                        "typeString": "type(struct User.user storage pointer)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "name",
                      "biodata"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "322:68:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_user_$294_memory",
                      "typeString": "struct User.user memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "300:90:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "usermap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 298,
                        "src": "400:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$294_storage_$",
                          "typeString": "mapping(address => struct User.user storage ref)"
                        }
                      },
                      "id": 315,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 356,
                          "src": "408:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "408:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "400:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_user_$294_storage",
                        "typeString": "struct User.user storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "newuser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "422:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_user_$294_memory_ptr",
                        "typeString": "struct User.user memory"
                      }
                    },
                    "src": "400:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_user_$294_storage",
                      "typeString": "struct User.user storage ref"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "400:29:1"
                }
              ]
            },
            "documentation": null,
            "id": 320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProfile",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "241:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "241:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "biodata",
                  "nodeType": "VariableDeclaration",
                  "scope": 320,
                  "src": "261:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "240:43:1"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "290:0:1"
            },
            "scope": 333,
            "src": "221:215:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "514:44:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 327,
                      "name": "usermap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "531:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_user_$294_storage_$",
                        "typeString": "mapping(address => struct User.user storage ref)"
                      }
                    },
                    "id": 329,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 328,
                      "name": "Useraddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 322,
                      "src": "539:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "531:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_user_$294_storage",
                      "typeString": "struct User.user storage ref"
                    }
                  },
                  "functionReturnParameters": 326,
                  "id": 330,
                  "nodeType": "Return",
                  "src": "524:27:1"
                }
              ]
            },
            "documentation": null,
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProfile",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 322,
                  "name": "Useraddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "461:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:21:1"
            },
            "returnParameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "502:11:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_user_$294_memory_ptr",
                    "typeString": "struct User.user"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 324,
                    "name": "user",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 294,
                    "src": "502:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_user_$294_storage_ptr",
                      "typeString": "struct User.user"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "501:13:1"
            },
            "scope": 333,
            "src": "441:117:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 334,
        "src": "89:471:1"
      }
    ],
    "src": "32:529:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/User.sol",
      "exportedSymbols": {
        "User": [
          333
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".1"
          ]
        },
        "id": 288,
        "name": "PragmaDirective",
        "src": "32:22:1"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 289,
        "name": "PragmaDirective",
        "src": "55:33:1"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            333
          ],
          "name": "User",
          "scope": 334
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "User.user",
              "name": "user",
              "scope": 333,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "name",
                  "scope": 294,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 290,
                    "name": "ElementaryTypeName",
                    "src": "129:6:1"
                  }
                ],
                "id": 291,
                "name": "VariableDeclaration",
                "src": "129:11:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "biodata",
                  "scope": 294,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 292,
                    "name": "ElementaryTypeName",
                    "src": "150:6:1"
                  }
                ],
                "id": 293,
                "name": "VariableDeclaration",
                "src": "150:14:1"
              }
            ],
            "id": 294,
            "name": "StructDefinition",
            "src": "108:63:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "usermap",
              "scope": 333,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct User.user)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct User.user)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 295,
                    "name": "ElementaryTypeName",
                    "src": "185:7:1"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "user",
                      "referencedDeclaration": 294,
                      "type": "struct User.user"
                    },
                    "id": 296,
                    "name": "UserDefinedTypeName",
                    "src": "194:4:1"
                  }
                ],
                "id": 297,
                "name": "Mapping",
                "src": "176:23:1"
              }
            ],
            "id": 298,
            "name": "VariableDeclaration",
            "src": "176:38:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "setProfile",
              "scope": 333,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 320,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 299,
                        "name": "ElementaryTypeName",
                        "src": "241:6:1"
                      }
                    ],
                    "id": 300,
                    "name": "VariableDeclaration",
                    "src": "241:18:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "biodata",
                      "scope": 320,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 301,
                        "name": "ElementaryTypeName",
                        "src": "261:6:1"
                      }
                    ],
                    "id": 302,
                    "name": "VariableDeclaration",
                    "src": "261:21:1"
                  }
                ],
                "id": 303,
                "name": "ParameterList",
                "src": "240:43:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 304,
                "name": "ParameterList",
                "src": "290:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        306
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "newuser",
                          "scope": 319,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct User.user",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "user",
                              "referencedDeclaration": 294,
                              "type": "struct User.user"
                            },
                            "id": 305,
                            "name": "UserDefinedTypeName",
                            "src": "300:4:1"
                          }
                        ],
                        "id": 306,
                        "name": "VariableDeclaration",
                        "src": "300:19:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "name",
                            "biodata"
                          ],
                          "type": "struct User.user memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 294,
                              "type": "type(struct User.user storage pointer)",
                              "value": "user"
                            },
                            "id": 307,
                            "name": "Identifier",
                            "src": "322:4:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 300,
                              "type": "string memory",
                              "value": "name"
                            },
                            "id": 308,
                            "name": "Identifier",
                            "src": "346:4:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 302,
                              "type": "string memory",
                              "value": "biodata"
                            },
                            "id": 309,
                            "name": "Identifier",
                            "src": "372:7:1"
                          }
                        ],
                        "id": 310,
                        "name": "FunctionCall",
                        "src": "322:68:1"
                      }
                    ],
                    "id": 311,
                    "name": "VariableDeclarationStatement",
                    "src": "300:90:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct User.user storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct User.user storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 298,
                                  "type": "mapping(address => struct User.user storage ref)",
                                  "value": "usermap"
                                },
                                "id": 312,
                                "name": "Identifier",
                                "src": "400:7:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 356,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 313,
                                    "name": "Identifier",
                                    "src": "408:3:1"
                                  }
                                ],
                                "id": 314,
                                "name": "MemberAccess",
                                "src": "408:10:1"
                              }
                            ],
                            "id": 315,
                            "name": "IndexAccess",
                            "src": "400:19:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 306,
                              "type": "struct User.user memory",
                              "value": "newuser"
                            },
                            "id": 316,
                            "name": "Identifier",
                            "src": "422:7:1"
                          }
                        ],
                        "id": 317,
                        "name": "Assignment",
                        "src": "400:29:1"
                      }
                    ],
                    "id": 318,
                    "name": "ExpressionStatement",
                    "src": "400:29:1"
                  }
                ],
                "id": 319,
                "name": "Block",
                "src": "290:146:1"
              }
            ],
            "id": 320,
            "name": "FunctionDefinition",
            "src": "221:215:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getProfile",
              "scope": 333,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "Useraddress",
                      "scope": 332,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 321,
                        "name": "ElementaryTypeName",
                        "src": "461:7:1"
                      }
                    ],
                    "id": 322,
                    "name": "VariableDeclaration",
                    "src": "461:19:1"
                  }
                ],
                "id": 323,
                "name": "ParameterList",
                "src": "460:21:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 332,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct User.user",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "user",
                          "referencedDeclaration": 294,
                          "type": "struct User.user"
                        },
                        "id": 324,
                        "name": "UserDefinedTypeName",
                        "src": "502:4:1"
                      }
                    ],
                    "id": 325,
                    "name": "VariableDeclaration",
                    "src": "502:11:1"
                  }
                ],
                "id": 326,
                "name": "ParameterList",
                "src": "501:13:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 326
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct User.user storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 298,
                              "type": "mapping(address => struct User.user storage ref)",
                              "value": "usermap"
                            },
                            "id": 327,
                            "name": "Identifier",
                            "src": "531:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 322,
                              "type": "address",
                              "value": "Useraddress"
                            },
                            "id": 328,
                            "name": "Identifier",
                            "src": "539:11:1"
                          }
                        ],
                        "id": 329,
                        "name": "IndexAccess",
                        "src": "531:20:1"
                      }
                    ],
                    "id": 330,
                    "name": "Return",
                    "src": "524:27:1"
                  }
                ],
                "id": 331,
                "name": "Block",
                "src": "514:44:1"
              }
            ],
            "id": 332,
            "name": "FunctionDefinition",
            "src": "441:117:1"
          }
        ],
        "id": 333,
        "name": "ContractDefinition",
        "src": "89:471:1"
      }
    ],
    "id": 334,
    "name": "SourceUnit",
    "src": "32:529:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x2A6502382152cF25885d5BdFe8c1a870507631D8",
      "transactionHash": "0x1dabf0dd05a3380790819ae31223316122cb42184173383afcaf3e7b2149b20c"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2023-12-05T07:38:03.036Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}